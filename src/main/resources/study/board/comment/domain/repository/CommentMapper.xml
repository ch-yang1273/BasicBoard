<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="study.board.comment.domain.repository.CommentMapper">

    <resultMap id="CommentResult" type="study.board.comment.domain.Comment">
        <id property="id" column="ID"/>
        <result property="content" column="CONTENT"/>
        <result property="postId" column="POST_ID"/>
        <result property="authorId" column="AUTHOR_ID"/>
        <result property="parentCommentId" column="PARENT_COMMENT_ID"/>
        <result property="isDeleted" column="IS_DELETED"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="modifiedTime" column="MODIFIED_TIME"/>
    </resultMap>

    <insert id="save" parameterType="study.board.comment.domain.Comment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO COMMENT (CONTENT, POST_ID, AUTHOR_ID, PARENT_COMMENT_ID, IS_DELETED, CREATE_TIME, MODIFIED_TIME)
        VALUES (#{content}, #{postId}, #{authorId}, #{parentCommentId}, #{isDeleted}, #{createTime}, #{modifiedTime})
    </insert>

    <select id="findListByPostId" parameterType="java.lang.Long" resultMap="CommentResult">
        SELECT *
        FROM COMMENT
        WHERE POST_ID = #{postId}
          AND IS_DELETED = FALSE
    </select>

    <select id="findListCommentAndAuthorNameByPostId"
            resultType="study.board.comment.domain.repository.CommentAndAuthorNameDto">
        SELECT C.ID                as id,
               C.CONTENT           as content,
               A.NICKNAME          as authorName,
               C.PARENT_COMMENT_ID as parentCommentId,
               C.CREATE_TIME       as createTime
        FROM COMMENT C
                 LEFT JOIN ACCOUNT A on C.AUTHOR_ID = A.ID
        WHERE C.POST_ID = #{postId}
          AND C.IS_DELETED = false
    </select>
</mapper>
